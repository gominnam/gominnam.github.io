<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://gominnam.github.io/</id><title>minjun's blog</title><subtitle>blogging page</subtitle> <updated>2022-12-17T15:24:54+09:00</updated> <author> <name>MIN-JUN KO</name> <uri>https://gominnam.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://gominnam.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://gominnam.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 MIN-JUN KO </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>2장 - 의미 있는 이름</title><link href="https://gominnam.github.io/posts/clean-code-02/" rel="alternate" type="text/html" title="2장 - 의미 있는 이름" /><published>2022-12-17T14:33:00+09:00</published> <updated>2022-12-17T14:33:00+09:00</updated> <id>https://gominnam.github.io/posts/clean-code-02/</id> <content src="https://gominnam.github.io/posts/clean-code-02/" /> <author> <name>MIN-JUN KO</name> </author> <category term="Book" /> <category term="Clean Code" /> <summary> 1. 의도를 분명히 밝혀라 이름을 지을 때 고려해야할 3가지 변수(혹은 함수나 클래스)의 존재 이유 수행 기능 사용 방법 int elapsedTimeInDays; int daysSinceCreation; int daysSinceModification; int fileAgeInDays; //다소 길더라도 의미전달이 중요하다. //주석이 필요하다면 의도를 분명히 드러내지 못했다는 말이다. 2. 발음하기 쉬운 이름을 사용하라 발음하기 어려운 이름은 토론하기도 어려우며 ‘지적인’ 대화가 힘들다. Class DtaRcrd102{ private Date genymdhms; private Date modymdhms; private final String... </summary> </entry> <entry><title>1장 - 깨끗한 코드</title><link href="https://gominnam.github.io/posts/clean-code-01/" rel="alternate" type="text/html" title="1장 - 깨끗한 코드" /><published>2022-12-13T21:40:00+09:00</published> <updated>2022-12-13T21:40:00+09:00</updated> <id>https://gominnam.github.io/posts/clean-code-01/</id> <content src="https://gominnam.github.io/posts/clean-code-01/" /> <author> <name>MIN-JUN KO</name> </author> <category term="Book" /> <category term="Clean Code" /> <summary> … 글을 적기에 앞서 책을 읽고 쓰는 첫 글이기 때문에 이유와 방향에 대해서 적는게 이로울듯 싶다. 글을 쓰는 이유는 독서를 하고 시간이 지나 다시 회고해보면 10% 정도가 기억이 날까? 그마저도 확신이 안섰다. 절망적인 기억력 때문에 정리하면서 한번더 보고, 주관적으로 중요하다 싶은 내용들을 빠르게 복기하기 위함이다. 방향은 책의 내용을 정리하는 것도 있겠지만 나의 주관적인 생각, 추측하는 글도 적을 것이다. 사실 정확하지 않은 정보들을 남이 읽을 수 있기 때문에 미리 변명하기 위한 이유가 사실 가장 크다. 추후에 잘못된 내용을 찾게 될시에는 수정하겠지만, 주관적인 생각과 추측은 독자가 저자에게 묻는 질문정도로 봐주면 좋겠다. 읽으시면서 만약 내가 쓴 추측이 맞는지 틀린지 헷갈린다면 모르는 것이... </summary> </entry> <entry><title>JBoss? Tomcat?</title><link href="https://gominnam.github.io/posts/JBoss/" rel="alternate" type="text/html" title="JBoss? Tomcat?" /><published>2022-09-05T21:20:00+09:00</published> <updated>2022-09-05T21:20:00+09:00</updated> <id>https://gominnam.github.io/posts/JBoss/</id> <content src="https://gominnam.github.io/posts/JBoss/" /> <author> <name>MIN-JUN KO</name> </author> <category term="Study" /> <category term="Etc" /> <summary> JBoss? Tomcat? Red Hat의 JBoss와 Apache의 Tomcat 플랫폼은 가장 광범위하게 사용되는 자바 어플리케이션 서버이다. 두 서버 모두 개발 및 프로덕션을 관리할 수 있다. 어느 플랫폼이 적합한지 비교하며 장점과 단점을 정리해야겠다. JBoss와 Tomcat을 비교할 때 지원하는 Java API를 포함하여 여러가지를 비교해야 하지만 주요한 차이점은 JBoss는 애플리케이션 서버인 반면 Tomcat은 서블릿 컨테이너이자 웹 서버라는 것이다. 위의 차이를 간략하게 정리하자면, WAS(Web Application Server)는 Java EE 사양을 준수하여 만든 서버를 의미하는데 좀 더 기능이 추가된 환경을 제공한다. 이미지출처 - https://www.tibco.com/ref... </summary> </entry> <entry><title>배치파일 - Batch File</title><link href="https://gominnam.github.io/posts/batch/" rel="alternate" type="text/html" title="배치파일 - Batch File" /><published>2022-08-29T18:20:00+09:00</published> <updated>2022-09-06T14:19:51+09:00</updated> <id>https://gominnam.github.io/posts/batch/</id> <content src="https://gominnam.github.io/posts/batch/" /> <author> <name>MIN-JUN KO</name> </author> <category term="Study" /> <category term="Etc" /> <summary> 배치 파일(Batch File)이란? 배치파일(Batch File)은 마이크로소프트사의 DOS 운영체제인 MS-DOS에서 명령어를 치는게 익숙치 않은 사용자들을 위해 명령어를 한번에 적어놓고 실행하게 할 수 있게 만들어서 편리하게 사용자가 타이핑 치는 수고를 줄여 놓은 명령어 스크립트이다. .bat 혹은 .cmd 형식의 확장자 파일을 직접 실행하거나 명령 프롬프트에서 배치 파일의 이름으로 실행할 수 있다. 특히 배치파일은 서버 분야에서 DB 관리와 백업 등에서 많이 사용된다. 또한 위도우 스케쥴러 등을 이용해 다소 반복적이고 귀찮은 업무를 자동화하는 데 많이 사용된다. 이런 전문적인 업무 외에도 많은 게임들에서 서버 운영을 하는 것에 배치 파일을 많이 사용하고 게임 실행 등에도 사용된다. 이미지출... </summary> </entry> <entry><title>토이프로젝트 - WebSocket</title><link href="https://gominnam.github.io/posts/api-websocket/" rel="alternate" type="text/html" title="토이프로젝트 - WebSocket" /><published>2022-07-26T20:11:00+09:00</published> <updated>2022-07-26T20:11:00+09:00</updated> <id>https://gominnam.github.io/posts/api-websocket/</id> <content src="https://gominnam.github.io/posts/api-websocket/" /> <author> <name>MIN-JUN KO</name> </author> <category term="Project" /> <category term="chatting" /> <summary> 채팅서버를 구현하기 앞서 서버환경을 어떻게 해야할지 자료를 조사하던중 기존에 구현해봤던 API대신에 WebSocket이라는 것을 사용해야한다. WebSocket은 사용자의 브라우저와 서버간에 단일 TCP 연결을 통해 전이중 통신 채널을 제공하는 컴퓨터 통신 프로토콜이다. 이 API를 사용하면 응답을 위해 서버를 폴링(Polling)하지 않고 서버에 메세지를 보내고 이벤트 기반 응답을 받을 수 있다. 접속까지는 HTTP 프로토콜을 이용하고 그 이후의 통신은 자체적은 WebSocket 프로토콜으로 통신하게 된다. 용어정리 폴링(Polling) : 폴링(polling)이란 하나의 장치(또는 프로그램)이 충돌 회피 또는 동기화 처리 등을 목적으로 다른 장치(또는 프로그램)의 상태를 주기적으로 검사하... </summary> </entry> </feed>

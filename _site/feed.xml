

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>MINJUN's NOTE</title>
  <subtitle>blogging page</subtitle>
  <updated>2021-12-23T00:56:16+09:00</updated>
  <author>
    <name>MIN-JUN KO</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator>
  <rights> © 2021 MIN-JUN KO </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Singleton Pattern</title>
    <link href="http://localhost:4000/posts/singleton-pattern/" rel="alternate" type="text/html" title="Singleton Pattern" />
    <published>2021-12-21T19:08:00+09:00</published>
  
    <updated>2021-12-21T19:08:00+09:00</updated>
  
    <id>http://localhost:4000/posts/singleton-pattern/</id>
    <content src="http://localhost:4000/posts/singleton-pattern/" />
    <author>
      <name>MIN-JUN KO</name>
    </author>

  
    
    <category term="Blog" />
    
    <category term="Design Pattern" />
    
  

  
    <summary>
      





      싱글톤 패턴이란 오직 1개의 인스턴스만 생성하는 패턴이다. 인스턴스를 1개만 생성하는 이유는 불필요한 메모리 누수를 막기 위함이다.
해당 클래스의 인스턴스가 필요할 때마다 생성한다면 리소스 소모가 많아지게 되고, 잘못 사용하여 메모리 해제가 되지 않게 된다면
메모리 누수로 인해 OOM이 발생하게 된다.

상글톤 패턴은 멀티스레드 환경에서 주의해서 사용해야 하는데 그 방법은 다음과 같다.

synchronized

멀티 스레드 환경에서 thread-safe하게 접근하기 위해서는 인스턴스를 가져오는 메소드에 synchronized 키워드를 붙이면 된다.
해당 키워드를 넣으면 먼저 온 스레드가 작업 중인 상태에서 다른 스레드가 접근할 경우 
나중에 온 스레드는 대기 상태가 되며, 먼저 온 스레드 작업이 끝나...
    </summary>
  

  </entry>

</feed>


